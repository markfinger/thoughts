{"version":3,"sources":["../src/plugin.js"],"names":[],"mappings":";;;;;;;;sBAAc,QAAQ;;;;qBAEP,UAAU,IAAoB,EAAE;MAApB,MAAM,GAAR,IAAoB,CAAlB,MAAM;MAAS,CAAC,GAAlB,IAAoB,CAAV,KAAK;;;AAEtC,MAAI,OAAO,YAAA,CAAC;AACZ,MAAI,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;AACvB,SAAO,IAAI,MAAM,CAAC,SAAS,EAAE;AAC3B,WAAO,EAAE;AACP,aAAO,EAAA,iBAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;AACjC,eAAO,GAAG,KAAK,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;AACjD,YAAM,KAAK,GAAG,CAAC,CAAC,oBAAoB,CAClC,GAAG,EACH,OAAO,EACP,CAAC,CAAC,cAAc,CACd,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,EACzE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAChC,CACF,CAAC;AACF,YAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OACtE;AACD,yBAAmB,EAAE;AACnB,YAAI,EAAA,cAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;AAC9B,cAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO;;AAEzB,cAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;;AAE1B,cAAM,UAAU,GAAG,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEzE,cAAM,IAAI,GAAG,CAAC,CAAC,mBAAmB,CAChC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAClB,EAAE,EACF,CAAC,CAAC,cAAc,CAAC,CACf,CAAC,CAAC,eAAe,CACf,CAAC,CAAC,cAAc,CACd,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,8DAA8D,CAAC,CAAC,CACrF,CACF,CACF,CAAC,CACH,CAAC;;AAEF,YAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEb,iBAAO,CACL,CAAC,CAAC,cAAc,CACd,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CACvC,EACD,IAAI,CACL,CAAC;SACH;OACF;KACF;GACF,CAAC,CAAC;CACJ","file":"plugin.js","sourcesContent":["import _ from 'lodash';\n\nexport default function ({ Plugin, types: t }) {\n  // TODO: check if it's safe to define this externally or if it needs to be bound per-file\n  let hotSwap;\n  var ws = new WeakSet();\n  return new Plugin('foo-bar', {\n    visitor: {\n      Program(node, parent, scope, path) {\n        hotSwap = scope.generateUidIdentifier('hotSwap');\n        const _node = t.assignmentExpression(\n          '=',\n          hotSwap,\n          t.callExpression(\n            t.callExpression(t.identifier('require'), [t.literal('hot-swap/module')]),\n            [t.literal(path.opts.filename)]\n          )\n        );\n        this.unshiftContainer('body', t.variableDeclaration('var', [_node]));\n      },\n      FunctionDeclaration: {\n        exit(node, parent, scope, path) {\n          if (ws.has(node)) return;\n\n          const name = node.id.name;\n\n          const expression = t.functionExpression(node.id, node.params, node.body);\n\n          const func = t.functionDeclaration(\n            t.identifier(name),\n            [],\n            t.blockStatement([\n              t.returnStatement(\n                t.callExpression(\n                  hotSwap, [t.literal('hotswap should return the proxy and it should be called here')]\n                )\n              )\n            ])\n          );\n\n          ws.add(func);\n\n          return [\n            t.callExpression(\n              hotSwap, [t.literal(name), expression]\n            ),\n            func\n          ];\n        }\n      }\n    }\n  });\n}"]}