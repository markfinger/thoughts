{"version":3,"sources":["../src/chubs.js"],"names":[],"mappings":"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","file":"chubs.js","sourcesContent":["import path from 'path';\nimport {transform, types} from 'babel-core';\nimport fs from 'fs';\nimport resolve from 'resolve';\nimport _ from 'lodash';\nimport Watchpack from 'watchpack';\nimport logger from './logger';\n\nlet moduleId = 0;\nlet modules = Object.create(null);\nlet modulesByFilename = Object.create(null);\n\nconst wp = new Watchpack();\n\nconst resolveLog = logger('resolve');\nconst depLog = logger('dep');\nconst parseLog = logger('parse');\nconst parseDepLog = logger('parse-dep');\nconst moduleLog = logger('module');\nconst buildLog = logger('build');\nconst buildPerfLog = logger('build-perf');\n\nfunction getDep(filename, dep) {\n  resolveLog(`resolving dep \"${dep}\" from ${filename}`);\n\n  let depPath = resolve.sync(dep, {\n    basedir: path.dirname(filename)\n  });\n\n  resolveLog(`resolved dep \"${dep}\" to ${depPath}`);\n\n  return getModuleByFilename(depPath);\n}\n\nfunction addDep(filename, name) {\n  let depModule = getDep(filename, name);\n  let mod = getModuleByFilename(filename);\n\n  if (!_.contains(depModule.dependents, mod.id)) {\n    depModule.dependents.push(mod.id);\n  }\n\n  if (!_.contains(mod.dependencies, depModule.id)) {\n    mod.dependencies.push(depModule.id);\n  }\n\n  depLog(`Added dep \"${depModule.id}\" to ${mod.id}`);\n\n  return depModule;\n}\n\nfunction getModuleByFilename(filename) {\n  moduleLog(`request for module \"${filename}\"`);\n\n  let id = modulesByFilename[filename];\n\n  if (id && modules[id]) {\n    return modules[id];\n  } else if (!id) {\n    id = (++moduleId).toString();\n  }\n\n  const mod = {\n    id: id,\n    filename: filename,\n    dependencies: [],\n    dependents: []\n  };\n\n  modules[id] = mod;\n  modulesByFilename[filename] = id;\n\n  moduleLog(`created module ${mod.id} for \"${filename}\"`);\n\n  return mod;\n}\n\nfunction getModuleById(id) {\n  return modules[id];\n}\n\nlet depTransform = 'chubs-deps';\n\ntransform.pipeline.addTransformer(\n  depTransform,\n  {\n    visitor: {\n      CallExpression: {\n        exit(node, parent, scope, path) {\n          if (node.callee.name === 'require') {\n            const dep = node.arguments[0];\n\n            if (!types.isLiteral(dep)) {\n              throw new Error('Dependency is not a literal: ' + JSON.stringify(dep))\n            }\n\n            const filename = path.opts.filename;\n\n            parseDepLog(`found dep \"${dep.value}\" in ${filename}`);\n\n            const depModule = addDep(filename, dep.value);\n\n            parseDepLog(`rewriting dep \"${dep.value}\" to \"${depModule.id}\"`);\n\n            dep.value = depModule.id + '';\n          }\n        }\n      }\n    }\n  }\n);\n\nfunction build(mod) {\n  const filename = mod.filename;\n\n  buildLog(`building ${filename}`);\n\n  const buildStart = Date.now();\n\n  if (!mod.code) {\n    buildLog(`reading ${filename}`);\n\n    let whitelist;\n    if (/nodemods/.test(filename)) {\n      whitelist = [depTransform];\n    }\n\n    const contents = fs.readFileSync(filename).toString();\n\n    const parseStart = Date.now();\n    const data = transform(contents, {\n      filename: filename,\n      whitelist: whitelist\n      //sourceMaps: true,\n      //sourceFileName: path.basename(filename),\n      //sourceMapTarget: path.basename(filename) + '.map'\n    });\n    const parseEnd = Date.now();\n\n    parseLog(`Spent ${parseEnd - parseStart}ms parsing ${filename}`);\n\n    mod.code = data.code;\n  }\n\n  const buildEnd = Date.now();\n  buildPerfLog(`Spent ${buildEnd - buildStart}ms building ${filename}`);\n\n  if (mod.dependencies.length) {\n    const buildDepsStart = Date.now();\n\n    mod.dependencies.forEach((id) => {\n      let depModule = getModuleById(id);\n      build(depModule);\n    });\n\n    const buildDepsEnd = Date.now();\n    buildPerfLog(`Spent ${buildDepsEnd - buildDepsStart}ms building dependencies for ${filename}`);\n  }\n}\n\nfunction defineModule(mod) {\n  const commentDivider = _.repeat('-', mod.filename.length);\n\n  return `\n// --------------------${commentDivider}\n// Module ${mod.id} -> ${mod.filename}\n// --------------------${commentDivider}\n__define('${mod.id}', function(module, exports, require) {\n${mod.code}\n});`;\n}\n\nfunction defineModules(modules) {\n  return _.map(modules, defineModule);\n}\n\nfunction generateScript(modules, entry) {\n  const entryModule = getModuleByFilename(entry);\n\n  return `\n(function() {\n// Preserve a reference to the global\nvar __global = this;\n\n// A map of module ids to module functions\nvar __moduleDefinitions = Object.create(null);\n\n// A store of the cached output from the module definitions\nvar __requireCache = Object.create(null);\n\n// The \\`require\\` function used by the modules\nfunction __require(dep) {\n  if (__requireCache[dep] !== undefined) {\n    return __requireCache[dep];\n  }\n\n  var _module = {exports: {}};\n\n  var moduleDefinition = __moduleDefinitions[dep];\n\n  __requireCache[dep] = moduleDefinition.call(__global, _module, _module.exports, __require);\n\n  return module.exports;\n};\n\n// Populate the module definitions\nvar __define = function(id, func) {\n  __moduleDefinitions[id] = func;\n};\n\n${defineModules(modules).join('\\n\\n')}\n\n\n// Call ${entryModule.filename}\n__require('${entryModule.id}');\n\n})();\n  `;\n}\n\nfunction watch(modules, startTime) {\n  const filenames = _(modules).values().pluck('filename').value();\n\n  wp.watch(filenames, [], startTime);\n}\n\nfunction chubs(opts, cb) {\n  const startTime = Date.now();\n\n  let entry = opts.entry;\n  if (!entry) {\n    throw new Error(`Entry option was not defined in ${JSON.stringify(opts)}`);\n  }\n\n  if (!path.isAbsolute(entry)) {\n    entry = path.resolve(entry);\n  }\n\n  console.log(`Entry: ${entry}`);\n\n  let mod = getModuleByFilename(entry);\n\n  build(mod);\n\n  watch(modules, startTime);\n\n  wp.on('change', function(filename) {\n    const mod = getModuleByFilename(filename);\n    mod.code = undefined;\n    build(mod);\n    console.log(`Rebuilt module ${mod.id}: ${mod.filename}`);\n  });\n\n  cb({\n    startTime,\n    entry,\n    output: generateScript(modules, entry),\n    modules\n  });\n}\n\nexport default chubs;"]}