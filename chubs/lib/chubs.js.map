{"version":3,"sources":["../src/chubs.js"],"names":[],"mappings":"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","file":"chubs.js","sourcesContent":["import path from 'path';\nimport {transform, types} from 'babel-core';\nimport fs from 'fs';\nimport resolve from 'resolve';\nimport logger from './logger';\nimport _ from 'lodash';\n\nlet moduleId = 0;\nlet modules = Object.create(null);\nlet modulesByFilename = Object.create(null);\n\nconst resolveLog = logger('resolve');\nconst depLog = logger('dep');\nconst parseLog = logger('parse');\nconst parseDepLog = logger('parse-dep');\nconst moduleLog = logger('module');\nconst buildLog = logger('build');\nconst buildPerfLog = logger('build-perf');\n\nfunction getDep(filename, dep) {\n  resolveLog(`resolving dep \"${dep}\" from ${filename}`);\n\n  let depPath = resolve.sync(dep, {\n    basedir: path.dirname(filename)\n  });\n\n  resolveLog(`resolved dep \"${dep}\" to ${depPath}`);\n\n  return getModule(depPath);\n}\n\nfunction addDep(filename, name) {\n  depLog(`Adding dep \"${name}\" to ${filename}`);\n\n  let depModule = getDep(filename, name);\n\n  let _module = getModule(filename);\n\n  _module.dependencies.push({\n    id: depModule.id,\n    name: name,\n    filename: depModule.filename\n  });\n\n  depLog(`Added dep \"${depModule.filename}\" to ${_module.filename}`);\n\n  return depModule;\n}\n\nfunction getModule(filename) {\n  moduleLog(`request for module \"${filename}\"`);\n\n  if (!filename) {\n    throw new Error('h')\n  }\n\n  let id = modulesByFilename[filename];\n\n  if (id) {\n    return modules[id];\n  } else {\n    id = (++moduleId).toString();\n  }\n\n  const _module = {\n    id: id,\n    filename: filename,\n    dependencies: []\n  };\n\n  modules[id] = _module;\n  modulesByFilename[filename] = id;\n\n  moduleLog(`created module ${_module.id} for \"${filename}\"`);\n\n  return _module;\n}\n\nlet depTransform = 'chubs-deps';\n\ntransform.pipeline.addTransformer(\n  depTransform,\n  {\n    visitor: {\n      CallExpression: {\n        exit(node, parent, scope, path) {\n          if (node.callee.name === 'require') {\n            const dep = node.arguments[0];\n\n            if (!types.isLiteral(dep)) {\n              throw new Error('Dependency is not a literal: ' + JSON.stringify(dep))\n            }\n\n            const filename = path.opts.filename;\n\n            parseDepLog(`found dep \"${dep.value}\" in ${filename}`);\n\n            const depModule = addDep(filename, dep.value);\n\n            parseDepLog(`rewriting dep \"${dep.value}\" to \"${depModule.id}\"`);\n\n            dep.value = depModule.id + '';\n          }\n        }\n      }\n    }\n  }\n);\n\nfunction build(filename) {\n  buildLog(`building ${filename}`);\n\n  const buildStart = Date.now();\n\n  const _module = getModule(filename);\n\n  if (!_module.code) {\n    buildLog(`reading ${filename}`);\n\n    let whitelist;\n    if (/node_modules/.test(filename)) {\n      whitelist = [depTransform];\n    }\n\n    const contents = fs.readFileSync(filename).toString();\n\n    const parseStart = Date.now();\n    const data = transform(contents, {\n      filename: filename,\n      whitelist: whitelist\n      //sourceMaps: true,\n      //sourceFileName: path.basename(filename),\n      //sourceMapTarget: path.basename(filename) + '.map'\n    });\n    const parseEnd = Date.now();\n\n    parseLog(`Spent ${parseEnd - parseStart}ms parsing ${filename}`);\n\n    _module.code = data.code;\n  }\n\n  const buildEnd = Date.now();\n  buildPerfLog(`Spent ${buildEnd - buildStart}ms building ${filename}`);\n\n  if (_module.dependencies.length) {\n    const buildDepsStart = Date.now();\n\n    _module.dependencies.forEach(function(dep) {\n      let depModule = getModule(dep.filename);\n\n      if (!depModule.code) {\n        buildLog(`building dependency ${depModule.filename}`);\n        build(depModule.filename);\n      }\n    });\n\n    const buildDepsEnd = Date.now();\n    buildPerfLog(`Spent ${buildDepsEnd - buildDepsStart}ms building dependencies for ${filename}`);\n  }\n}\n\nfunction chubs(filename) {\n  build(filename);\n\n  let definitions = [];\n\n  for (var id in modules) {\n    const _module = modules[id];\n    const commentDivider = _.repeat('-', _module.filename.length);\n    const definition = `\n__define('${_module.id}', function(module, exports, require) {\n// start: ${_module.filename}\n// -------${commentDivider}\n\n\n${_module.code}\n\n\n// -----${commentDivider}\n// end: ${_module.filename}\n});`;\n    definitions.push(definition);\n  }\n\n  const entryModule = modulesByFilename[filename];\n\n  const script = `\n(function() {\nvar __global = this;\nvar __modules = Object.create(null);\nvar __requireCache = Object.create(null);\n\nfunction __require(dep) {\n  if (__requireCache[dep] !== undefined) {\n    return __requireCache[dep];\n  }\n\n  var module = {exports: {}};\n\n  __requireCache[dep] = __modules[dep].call(__global, module, module.exports, __require);\n\n  return module.exports;\n};\n\nvar __define = function(id, _module) {\n  __modules[id] = _module;\n};\n\n${definitions.join('\\n\\n')}\n\n\n__require('${entryModule}');\n\n})();\n  `;\n\n  console.log(script)\n}\n\nmodule.exports = chubs;"]}